
services:
  db:
    image: timescale/timescaledb:latest-pg16
    container_name: tsdb
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - TIMESCALE_TELEMETRY=off
    ports:
      - "5432:5432"
    volumes:
      - tsdb-data:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana-oss:11.2.0
    container_name: grafana
    restart: unless-stopped
    env_file: .env
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning

  ingestor:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: crypto-ingestor
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
    environment:
      - SYMBOLS=BTC/USDT,ETH/USDT

  ws_recorder:
    build: ./gateway
    container_name: ws_recorder
    restart: unless-stopped
    env_file: .env
    environment:
      - CONFIG=/config/config.toml
    volumes:
      - ./gateway/config:/config:ro
    depends_on:
      - db
    ports:
      - "9187:9187"
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:9187/metrics"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  tsdb-data:
  grafana-storage: